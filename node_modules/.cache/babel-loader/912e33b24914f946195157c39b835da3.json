{"ast":null,"code":"var _jsxFileName = \"/home/spx121/demoemmerceprojectbazar/src/components/AutoSuggestion.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport AutoSuggest from \"react-autosuggest\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { SearchProductActions } from \"../store/actions/action\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AutoSuggestion = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [value, setValue] = useState(\"\");\n  const [suggestions, setSuggestions] = useState([]); // const [selected, setSelected] = useState(\"\");\n\n  const searchdata = useSelector(state => state.searchReducers.searchproducts);\n\n  const getSuggestionValue = suggestion => suggestion.Title;\n\n  const getSuggestions = value => {\n    const inputValue = value.trim().toLowerCase();\n    const inputLength = inputValue.length;\n    return inputLength === 0 ? [] : searchdata.filter(item => item.Title.toLowerCase().slice(0, inputLength) === inputValue);\n  };\n\n  const onChange = (event, _ref) => {\n    let {\n      newValue\n    } = _ref;\n    setValue(newValue);\n    SearchProductActions(dispatch, {\n      searchValue: newValue\n    });\n  };\n\n  const onSubmitHandler = e => {\n    e.preventDefault();\n    navigate(`/product-listing-page/search/?searchValue=${value}`);\n  };\n\n  const onSuggestionsFetchRequested = _ref2 => {\n    let {\n      value\n    } = _ref2;\n    setSuggestions(getSuggestions(value));\n  };\n\n  const renderSuggestion = suggestion => /*#__PURE__*/_jsxDEV(Link, {\n    to: `/product-listing-page/${suggestion.Title}?category=${suggestion.categoryData.slug}&searchValue=${value}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: suggestion.Title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n\n  const onSuggestionsClearRequested = () => setSuggestions([]); //   const onSuggestionSelected = (event, { suggestion }) => {\n  //       setSelected(suggestion.Title);\n  //   };\n\n\n  const inputProps = {\n    placeholder: \"Search for anything\",\n    value,\n    onChange\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmitHandler,\n      children: /*#__PURE__*/_jsxDEV(AutoSuggest, {\n        suggestions: searchdata ? searchdata : [],\n        onSuggestionsFetchRequested: onSuggestionsFetchRequested,\n        onSuggestionsClearRequested: onSuggestionsClearRequested //   onSuggestionSelected={onSuggestionSelected}\n        ,\n        getSuggestionValue: getSuggestionValue,\n        renderSuggestion: renderSuggestion,\n        inputProps: inputProps\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AutoSuggestion, \"tfxBnyohV0UQ3ra6hLsO4B58hAk=\", false, function () {\n  return [useDispatch, useNavigate, useSelector];\n});\n\n_c = AutoSuggestion;\nexport default AutoSuggestion;\n\nvar _c;\n\n$RefreshReg$(_c, \"AutoSuggestion\");","map":{"version":3,"sources":["/home/spx121/demoemmerceprojectbazar/src/components/AutoSuggestion.js"],"names":["React","useState","AutoSuggest","useSelector","useDispatch","SearchProductActions","Link","useNavigate","AutoSuggestion","dispatch","navigate","value","setValue","suggestions","setSuggestions","searchdata","state","searchReducers","searchproducts","getSuggestionValue","suggestion","Title","getSuggestions","inputValue","trim","toLowerCase","inputLength","length","filter","item","slice","onChange","event","newValue","searchValue","onSubmitHandler","e","preventDefault","onSuggestionsFetchRequested","renderSuggestion","categoryData","slug","onSuggestionsClearRequested","inputProps","placeholder"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,SAASC,IAAT,EAAeC,WAAf,QAAkC,kBAAlC;;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAC3B,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAMM,QAAQ,GAAGH,WAAW,EAA5B;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACY,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAAC,EAAD,CAA9C,CAJ2B,CAK3B;;AACA,QAAMc,UAAU,GAAGZ,WAAW,CAC3Ba,KAAD,IAAWA,KAAK,CAACC,cAAN,CAAqBC,cADJ,CAA9B;;AAIA,QAAMC,kBAAkB,GAAIC,UAAD,IAAgBA,UAAU,CAACC,KAAtD;;AAEA,QAAMC,cAAc,GAAIX,KAAD,IAAW;AAChC,UAAMY,UAAU,GAAGZ,KAAK,CAACa,IAAN,GAAaC,WAAb,EAAnB;AACA,UAAMC,WAAW,GAAGH,UAAU,CAACI,MAA/B;AAEA,WAAOD,WAAW,KAAK,CAAhB,GACH,EADG,GAEHX,UAAU,CAACa,MAAX,CACGC,IAAD,IACEA,IAAI,CAACR,KAAL,CAAWI,WAAX,GAAyBK,KAAzB,CAA+B,CAA/B,EAAkCJ,WAAlC,MAAmDH,UAFvD,CAFJ;AAMD,GAVD;;AAWA,QAAMQ,QAAQ,GAAG,CAACC,KAAD,WAAyB;AAAA,QAAjB;AAAEC,MAAAA;AAAF,KAAiB;AACxCrB,IAAAA,QAAQ,CAACqB,QAAD,CAAR;AACA5B,IAAAA,oBAAoB,CAACI,QAAD,EAAW;AAAEyB,MAAAA,WAAW,EAAED;AAAf,KAAX,CAApB;AACD,GAHD;;AAKA,QAAME,eAAe,GAAIC,CAAD,IAAO;AAC7BA,IAAAA,CAAC,CAACC,cAAF;AACA3B,IAAAA,QAAQ,CAAE,6CAA4CC,KAAM,EAApD,CAAR;AACD,GAHD;;AAKA,QAAM2B,2BAA2B,GAAG,SAAe;AAAA,QAAd;AAAE3B,MAAAA;AAAF,KAAc;AACjDG,IAAAA,cAAc,CAACQ,cAAc,CAACX,KAAD,CAAf,CAAd;AACD,GAFD;;AAGA,QAAM4B,gBAAgB,GAAInB,UAAD,iBACvB,QAAC,IAAD;AACE,IAAA,EAAE,EAAG,yBAAwBA,UAAU,CAACC,KAAM,aAAYD,UAAU,CAACoB,YAAX,CAAwBC,IAAK,gBAAe9B,KAAM,EAD9G;AAAA,2BAGE;AAAA,gBAAMS,UAAU,CAACC;AAAjB;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA,UADF;;AAQA,QAAMqB,2BAA2B,GAAG,MAAM5B,cAAc,CAAC,EAAD,CAAxD,CA5C2B,CA8C3B;AACA;AACA;;;AAEA,QAAM6B,UAAU,GAAG;AACjBC,IAAAA,WAAW,EAAE,qBADI;AAEjBjC,IAAAA,KAFiB;AAGjBoB,IAAAA;AAHiB,GAAnB;AAMA,sBACE;AAAA,2BACE;AAAM,MAAA,QAAQ,EAAEI,eAAhB;AAAA,6BACE,QAAC,WAAD;AACE,QAAA,WAAW,EAAEpB,UAAU,GAAGA,UAAH,GAAgB,EADzC;AAEE,QAAA,2BAA2B,EAAEuB,2BAF/B;AAGE,QAAA,2BAA2B,EAAEI,2BAH/B,CAIE;AAJF;AAKE,QAAA,kBAAkB,EAAEvB,kBALtB;AAME,QAAA,gBAAgB,EAAEoB,gBANpB;AAOE,QAAA,UAAU,EAAEI;AAPd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CAvED;;GAAMnC,c;UACaJ,W,EACAG,W,EAIEJ,W;;;KANfK,c;AAyEN,eAAeA,cAAf","sourcesContent":["import React, { useState } from \"react\";\nimport AutoSuggest from \"react-autosuggest\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { SearchProductActions } from \"../store/actions/action\";\nimport { Link, useNavigate } from \"react-router-dom\";\n\nconst AutoSuggestion = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [value, setValue] = useState(\"\");\n  const [suggestions, setSuggestions] = useState([]);\n  // const [selected, setSelected] = useState(\"\");\n  const searchdata = useSelector(\n    (state) => state.searchReducers.searchproducts\n  );\n\n  const getSuggestionValue = (suggestion) => suggestion.Title;\n\n  const getSuggestions = (value) => {\n    const inputValue = value.trim().toLowerCase();\n    const inputLength = inputValue.length;\n\n    return inputLength === 0\n      ? []\n      : searchdata.filter(\n          (item) =>\n            item.Title.toLowerCase().slice(0, inputLength) === inputValue\n        );\n  };\n  const onChange = (event, { newValue }) => {\n    setValue(newValue);\n    SearchProductActions(dispatch, { searchValue: newValue });\n  };\n\n  const onSubmitHandler = (e) => {\n    e.preventDefault();\n    navigate(`/product-listing-page/search/?searchValue=${value}`);\n  };\n\n  const onSuggestionsFetchRequested = ({ value }) => {\n    setSuggestions(getSuggestions(value));\n  };\n  const renderSuggestion = (suggestion) => (\n    <Link\n      to={`/product-listing-page/${suggestion.Title}?category=${suggestion.categoryData.slug}&searchValue=${value}`}\n    >\n      <div>{suggestion.Title}</div>\n    </Link>\n  );\n\n  const onSuggestionsClearRequested = () => setSuggestions([]);\n\n  //   const onSuggestionSelected = (event, { suggestion }) => {\n  //       setSelected(suggestion.Title);\n  //   };\n\n  const inputProps = {\n    placeholder: \"Search for anything\",\n    value,\n    onChange,\n  };\n\n  return (\n    <div>\n      <form onSubmit={onSubmitHandler}>\n        <AutoSuggest\n          suggestions={searchdata ? searchdata : []}\n          onSuggestionsFetchRequested={onSuggestionsFetchRequested}\n          onSuggestionsClearRequested={onSuggestionsClearRequested}\n          //   onSuggestionSelected={onSuggestionSelected}\n          getSuggestionValue={getSuggestionValue}\n          renderSuggestion={renderSuggestion}\n          inputProps={inputProps}\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default AutoSuggestion;\n"]},"metadata":{},"sourceType":"module"}